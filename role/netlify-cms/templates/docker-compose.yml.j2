version: '3.7'

services:
  db:
    image: mariadb:10
    container_name: netlify_db
    restart: always
    environment:
      - TZ={{ TIMEZONE }}
      - MYSQL_ROOT_PASSWORD={{ MYSQL_ROOT_PASSWORD }}
      - MYSQL_DATABASE={{ MYSQL_DATABASE }}
      - MYSQL_USER={{ MYSQL_USER }}
      - MYSQL_PASSWORD={{ MYSQL_PASSWORD }}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "netlify_db_{{ HOST_NAME }}:/var/lib/mysql"
    ports:
      - 3306:3306
    networks:
      - cms

  gotrue:
    build:
      context: https://github.com/netlify/gotrue.git#195495cd917aa4a7c189121383c5b4fbacffba9e
      dockerfile: Dockerfile
    container_name: netlify_gotrue
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.gotrue.tls=true
      - traefik.http.routers.gotrue.rule=Host(`{{ HOST_NAME }}.{{ DOMAIN_NAME }}`) && PathPrefix(`/.netlify/identity`)
      - "traefik.http.routers.gotrue.middlewares=gotrue-stripprefix"
      - "traefik.http.middlewares.gotrue-stripprefix.stripprefix.prefixes=/.netlify/identity"
      - traefik.http.services.gotrue.loadbalancer.server.port=8081
    environment:
      - "/etc/localtime:/etc/localtime:ro"
      - TZ={{ TIMEZONE }}
      - GOTRUE_DB_DRIVER=mysql
      - DATABASE_URL={{ MYSQL_USER }}:{{ MYSQL_PASSWORD }}@tcp(db:3306)/gotrue?parseTime=true&multiStatements=true
      - GOTRUE_JWT_SECRET={{ JWT_SECRET }}
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_JWT_AUD={{ HOST_NAME }}
      - GOTRUE_API_HOST=0.0.0.0
      - PORT=8081
      - GOTRUE_SITE_URL=http://{{ HOST_NAME }}.{{ DOMAIN_NAME }}
      - GOTRUE_MAILER_AUTOCONFIRM=true
      - GOTRUE_DISABLE_SIGNUP=true
      - GOTRUE_LOG_LEVEL={{ GOTRUE_LOG_LEVEL }}
      - GOTRUE_OPERATOR_TOKEN={{ GOTRUE_OPERATOR_TOKEN }}
      - GOTRUE_EXTERNAL_GOOGLE_ENABLED=true
      - GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID={{ GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID }}
      - GOTRUE_EXTERNAL_GOOGLE_SECRET={{ GOTRUE_EXTERNAL_GOOGLE_SECRET }}
      - GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI=https://{{ HOST_NAME }}.{{ DOMAIN_NAME }}/.netlify/identity/callback
      # - GOTRUE_DB_AUTOMIGRATE=true
      # - GOTRUE_EXTERNAL_EMAIL_ENABLED=false
    # ports:
    #   - 8081:8081
    depends_on:
      - db
    networks:
      - cms

  git-gateway:
    build:
      context: https://github.com/netlify/git-gateway.git#0c4e28d9149e0fd3a84c315557146e683e09c1f5
      dockerfile: Dockerfile
    container_name: netlify_git-gatway
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.gitgateway.tls=true
      - traefik.http.routers.gitgateway.rule=Host(`{{ HOST_NAME }}.{{ DOMAIN_NAME }}`) && PathPrefix(`/.netlify/git`)
      - "traefik.http.routers.gitgateway.middlewares=gitgateway-stripprefix"
      - "traefik.http.middlewares.gitgateway-stripprefix.stripprefix.prefixes=/.netlify/git"
      - "traefik.http.services.gitgateway.loadbalancer.server.port=9999"
    environment:
      - "/etc/localtime:/etc/localtime:ro"
      - TZ={{ TIMEZONE }}
      - GITGATEWAY_API_HOST=0.0.0.0
      - PORT=9999
      - GITGATEWAY_JWT_SECRET={{ JWT_SECRET }}
      - GITGATEWAY_DB_DRIVER=sqlite3
      - DATABASE_URL=gorm.db
      - GITGATEWAY_GITHUB_ACCESS_TOKEN={{ GITGATEWAY_GITHUB_ACCESS_TOKEN }}
      - GITGATEWAY_GITHUB_REPO={{ GITGATEWAY_GITHUB_REPO }}
      # - GITGATEWAY_ROLES={{ GITGATEWAY_ROLES }}
    volumes:
      - netlify_gitgateway_{{ HOST_NAME }}:/go/
    # ports:
    #   - 9999:9999
    networks:
      - cms

  gatsby:
    build:
      context: "{{ DIR_CONFIG_FILE }}/{{ HOST_NAME }}"
      dockerfile: gatsby.Dockerfile
    container_name: netlify_gatsby
    restart: always
    # labels:
    #   - traefik.enable=true
    #   - traefik.http.routers.gatsby.entrypoints=https
    #   - traefik.http.routers.gatsby.tls=true
    #   - traefik.http.routers.gatsby.tls.certresolver=le
    #   - traefik.http.routers.gatsby.rule=Host(`{{ HOST_NAME }}.{{ DOMAIN_NAME }}`)
    #   - "traefik.http.services.gatsby.loadbalancer.server.port=8000"
    environment:
      - "/etc/localtime:/etc/localtime:ro"
      - TZ={{ TIMEZONE }}
    volumes:
    #   - "{{ DIR_CONFIG_FILE }}/{{ HOST_NAME }}/nginx/custom_nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      - "netlify_gatsby_{{ HOST_NAME }}:/opt/gatsby_cms"
    # ports:
    #   - 8000:8000
    #   - 9000:9000
    networks:
      - cms

  nginx:
    image: nginx:1.21-alpine
    container_name: netlify_nginx
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.gatsby.entrypoints=https
      - traefik.http.routers.gatsby.tls=true
      - traefik.http.routers.gatsby.tls.certresolver=le
      - traefik.http.routers.gatsby.rule=Host(`{{ HOST_NAME }}.{{ DOMAIN_NAME }}`)
      - "traefik.http.services.gatsby.loadbalancer.server.port=80"
    environment:
      # - "/etc/localtime:/etc/localtime:ro"
      - TZ={{ TIMEZONE }}
    volumes:
      - "{{ DIR_CONFIG_FILE }}/{{ HOST_NAME }}/nginx/custom_nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      - "netlify_gatsby_{{ HOST_NAME }}:/opt/gatsby_cms:ro"
    networks:
      - cms

  traefik:
    image: traefik:v2.5.3
    container_name: netlify_traefik
    restart: always
    command:
      # - '--providers.docker.watch=true'
      - --log.level=INFO
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.http.http.redirections.entryPoint.scheme=https
      - --entrypoints.http.http.redirections.entrypoint.permanent=true
      - --certificatesresolvers.le.acme.dnschallenge=true
      - --certificatesresolvers.le.acme.email=test@example.ru
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
{% if acme_challenge == 'http' %}
      - --certificatesResolvers.le.acme.httpChallenge.entryPoint=http
{% elif acme_challenge == 'dns_cloudflare' %}
      - --certificatesResolvers.le.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
{% endif %}
      - --providers.file.filename=/configs/traefik_tls.yml
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    environment:
      CLOUDFLARE_DNS_API_TOKEN: "{{ API_TOKEN }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ DIR_CONFIG_FILE }}/{{ HOST_NAME }}/traefik/letsencrypt:/letsencrypt"
      - "{{ DIR_CONFIG_FILE }}/{{ HOST_NAME }}/traefik/traefik_tls.yml:/configs/traefik_tls.yml"
    ports:
      - 80:80
      - 443:443
    networks:
      - cms

volumes:
  netlify_db_{{ HOST_NAME }}:
    name: netlify_db_{{ HOST_NAME }}
  netlify_gitgateway_{{ HOST_NAME }}:
    name: netlify_gitgateway_{{ HOST_NAME }}
  netlify_gatsby_{{ HOST_NAME }}:
    name: netlify_gatsby_{{ HOST_NAME }}

networks:
  cms:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: {{ DOCKER_MTU }}